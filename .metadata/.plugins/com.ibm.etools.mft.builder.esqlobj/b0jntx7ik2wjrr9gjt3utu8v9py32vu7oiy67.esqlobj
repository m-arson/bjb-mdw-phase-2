CREATE COMPUTE MODULE MF_TX_MDW_ACC_TRF_ITA_MULTIPOST_Mapping_Res_Core
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Keep the UUID
		SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		-- Logging input
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL id.co.bankbjb.mdw.lib.LogInputDebug(InputExceptionList, InputLocalEnvironment, InputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;

		SET OutputRoot.MQMD.CorrelId = CAST(Environment.Variables.details.correlId AS BLOB);
		SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData[1].queueName = SERVICE_PARAM.TxQueueRes;

		DECLARE errorMap, outData ROW;
		DECLARE httpStatus CHARACTER;
		CREATE LASTCHILD OF outData DOMAIN 'JSON';
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data;

		IF inRef.RC = '0068' THEN
			CALL id.co.bankbjb.mdw.lib.GetErrorDetails(T_ERROR_MAP, errorMap, 'MDW0068', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSEIF inRef.RC = '0091' THEN
			CALL id.co.bankbjb.mdw.lib.GetErrorDetails(T_ERROR_MAP, errorMap, 'CANNOT_PUT_TO_CORE', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSE
			SET outRef.CHANNEL_ID = inRef.CID;
			SET outRef.AUTH_TOKEN = Environment.Variables.inMessage.AUTH_TOKEN;
			SET outRef.REF_NO = Environment.Variables.inMessage.REF_NO;
			SET outRef.MODULE_CODE = Environment.Variables.inMessage.MODULE_CODE;
	--------------------------------------MAPPING FROM RES-----------------------------------------
			IF inRef.MPI.ZLPST01 IS NOT NULL THEN
				SET outRef.MESSAGE1 = inRef.MPI.ZLPST01;
			END IF;
			IF inRef.MPI.ZLPST02 IS NOT NULL THEN
				SET outRef.MESSAGE2 = inRef.MPI.ZLPST02;
			END IF;
			IF inRef.MPI.ZLPST03 IS NOT NULL THEN
				SET outRef.MESSAGE3 = inRef.MPI.ZLPST03;
			END IF;
			IF inRef.MPI.ZLPST04 IS NOT NULL THEN
				SET outRef.MESSAGE4 = inRef.MPI.ZLPST04;
			END IF;
			IF inRef.MPI.ZLPST05 IS NOT NULL THEN
				SET outRef.MESSAGE5 = inRef.MPI.ZLPST05;
			END IF;
			IF inRef.MPI.ZLPST06 IS NOT NULL THEN
				SET outRef.MESSAGE6 = inRef.MPI.ZLPST06;
			END IF;
			IF inRef.MPI.ZLPST07 IS NOT NULL THEN
				SET outRef.MESSAGE7 = inRef.MPI.ZLPST07;
			END IF;
			IF inRef.MPI.ZLPST08 IS NOT NULL THEN
				SET outRef.MESSAGE8 = inRef.MPI.ZLPST08;
			END IF;
			IF inRef.MPI.ZLPST09 IS NOT NULL THEN
				SET outRef.MESSAGE9 = inRef.MPI.ZLPST09;
			END IF;
			IF inRef.MPI.ZLPST10 IS NOT NULL THEN
				SET outRef.MESSAGE10 = inRef.MPI.ZLPST10;
			END IF;
			---------------------------------------MAPPING FROM RES---------------------------------------
			SET outRef.RESPONSE_CODE = '';
			SET outRef.RESPONSE_MESSAGE = '';

			IF inRef.RC = '0000' THEN
				SET outRef.RESPONSE_CODE = '0000';
				SET outRef.RESPONSE_MESSAGE = 'success';
			ELSE
				CALL id.co.bankbjb.mdw.lib.GetErrorDetails(T_ERROR_MAP, errorMap, inRef.RCMSG."0".MESSAGE_ID, SOURCE_SYSTEM, TARGET_SYSTEM);

				IF FIELDTYPE(errorMap.Field) IS NULL
					THEN
					CALL id.co.bankbjb.mdw.lib.GetErrorDetails(T_ERROR_MAP, errorMap, '*', SOURCE_SYSTEM, TARGET_SYSTEM);
				END IF;

				SET outRef.RESPONSE_CODE = errorMap.Field.RC;
				SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
				SET httpStatus = errorMap.Field.HTTP_STATUS;
			END IF;

			SET outRef.KSMID = COALESCE(inRef.RCMSG."0".MESSAGE_ID, '');
		END IF;

		SET outRef.RESPONSE_TIME = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		SET outData.JSON.(JSON.Object)Data = outRef;
		-- Logging output
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL id.co.bankbjb.mdw.lib.LogOutputDebug(OutputExceptionList, OutputLocalEnvironment, OutputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;

		SET OutputRoot.MQRFH2.usr.vs.httpStatus = httpStatus;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		SET OutputRoot.JSON.(JSON.Object)Data = outData.JSON.Data;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;