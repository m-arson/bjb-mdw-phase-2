/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		
		-- Declare TCP In and TCP Out Properties
		DECLARE tcpInRef REFERENCE TO InputLocalEnvironment.TCPIP.Input.ConnectionDetails;
		CREATE FIELD OutputLocalEnvironment.Destination.TCPIP.Output;
		DECLARE tcpOutRef REFERENCE TO OutputLocalEnvironment.Destination.TCPIP.Output;
		DECLARE cnt INTEGER;
		
		-- Load Session from database if not exists
		IF FIELDNAME(SESSION.Data) IS NULL THEN		
			CALL PopulateSessionRow(SESSION, Environment);
		END IF;
		
		-- Count number of row from database
		SET cnt = CARDINALITY(SESSION.Data[]);
		
		-- Close TCP Connection if table if null
		IF cnt = 0 THEN
			SET tcpOutRef.Id = tcpInRef.Id;
			SET tcpOutRef.Port = tcpInRef.Port;
			
			PROPAGATE TO TERMINAL 'out';	
		END IF;
		
		-- Validate IP Address and Close connection if IP Address not registered
		IF NOT IsValidIPAddress(SESSION, tcpInRef.ClientDetails.Address) THEN
			SET tcpOutRef.Id = tcpInRef.Id;
			SET tcpOutRef.Port = tcpInRef.Port;
			
			PROPAGATE TO TERMINAL 'out';
		END IF;
		
		-- Get Session index from shared row
		DECLARE sessionIndex INTEGER;
		SET sessionIndex = GetSessionIndex(SESSION, tcpInRef.ClientDetails.Address);
		
		X: BEGIN READ WRITE
			SET SESSION.Data[I].CONN_ID = tcpInRef.Id;
			SET SESSION.Data[I].MDW_PORT = tcpInRef.Port;
		END X;
		
		RETURN FALSE;