CREATE PROCEDURE UpdateBitmapsBasedOnAvailableFields(INOUT DFDLPointer REFERENCE)
	BEGIN
		DECLARE BitName CHAR;
		DECLARE BitMapName CHAR 'PrimaryBitmap';
		DECLARE CurrentFieldName CHAR;
		DECLARE CurrentFieldNumber INT;
		DECLARE CurrentFieldBase INT;
		DECLARE IndexChar1 CHAR;
		DECLARE IndexChar2 CHAR;
		DECLARE Value INT;
		DECLARE CharValue CHAR;

		MOVE DFDLPointer NEXTSIBLING;
		WHILE LASTMOVE(DFDLPointer) DO
			SET CurrentFieldName = FIELDNAME(DFDLPointer);
			SET CurrentFieldNumber = CAST(SUBSTRING(CurrentFieldName AFTER 'd') AS INT);
			SET CurrentFieldBase = FLOOR((CurrentFieldNumber - 1) / 4) * 4 + 1;
			SET Value = CAST(POWER(2, 3 - MOD(CurrentFieldNumber - 1, 4)) AS INT);
			CALL GenerateThreeDigitIndex(CurrentFieldBase, IndexChar1);
			CALL GenerateThreeDigitIndex(CurrentFieldBase + 3, IndexChar2);
			SET BitName = 'Bits' || IndexChar1 || 'to' || IndexChar2;
			IF CurrentFieldNumber > 64 THEN
				SET BitMapName = 'SecondaryBitmap';
			END IF;
			
			SET CharValue = OutputRoot.DFDL.isomsg.{BitMapName}.{BitName};
			SET CharValue = '000000000000000' || CharValue;
			SET Value = CAST(CAST(CharValue AS BLOB) AS INT) + Value;
			SET CharValue = CAST(CAST(Value AS BLOB) AS CHAR);
			SET CharValue = UPPER(SUBSTRING(CharValue FROM 18 FOR 1));
			SET OutputRoot.DFDL.isomsg.{BitMapName}.{BitName} = CharValue;

			MOVE DFDLPointer NEXTSIBLING;
		END WHILE;
	END;