/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		
		-- Keep the UUID
		SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		
		-- Logging input
		CALL PrepareLogMessage(OutputRoot, ApplicationLabel, MessageFlowLabel, NodeLabel, 'input', 'debug', InputExceptionList, InputLocalEnvironment, InputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.BLOB;
		
		SET OutputRoot.MQMD.CorrelId = CAST(Environment.Variables.details.correlId AS BLOB);
				
		DECLARE errorMap, outData ROW;
		DECLARE httpStatus CHARACTER;
		CREATE LASTCHILD OF outData DOMAIN 'JSON';
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data;
		
		IF inRef.RC = '0068' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'MDW0068', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSEIF inRef.RC = '0091' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'CANNOT_PUT_TO_CORE', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSE
	        SET outRef.CHANNEL_ID = inRef.CID;
	        SET outRef.AUTH_TOKEN = Environment.Variables.inMessage.AUTH_TOKEN;
	        SET outRef.REF_NO = Environment.Variables.inMessage.REF_NO;
	        SET outRef.MODULE_CODE = Environment.Variables.inMessage.MODULE_CODE;
	        SET outRef.ACC_CDT = inRef.MPO."0".ZLEAN1;
	        SET outRef.ACC_DBT = inRef.MPO."0".ZLEAN;
	        SET outRef.ACC_DBT_IN = inRef.MPO."0".ZLAB1 || inRef.MPO."0".ZLAN1 || inRef.MPO."0".ZLAS1;
	        SET outRef.ACC_CDT_IN = inRef.MPO."0".ZLAB2 || inRef.MPO."0".ZLAN2 || inRef.MPO."0".ZLAS2;
	        SET outRef.AMOUNT = inRef.MPO."0".ZLAMZ1;
	        SET outRef.COD_DBT = inRef.MPO."0".ZLTCD1;
	        SET outRef.COD_CDT = inRef.MPO."0".ZLTCD2;
	        SET outRef.REF_TRX = inRef.MPO."0".ZLREF;
	        SET outRef.REF_1 = inRef.MPO."0".ZLDRF1;
	        SET outRef.REF_2 = inRef.MPO."0".ZLDRF2;
	        SET outRef.NAR_1 = inRef.MPO."0".ZLNR1;
	        SET outRef.NAR_2 = inRef.MPO."0".ZLNR2;
	        SET outRef.NAR_3 = inRef.MPO."0".ZLNR3;
	        SET outRef.NAR_5 = inRef.MPO."0".ZLNR5;
	        SET outRef.NAR_6 = inRef.MPO."0".ZLNR6;
	        SET outRef.NAR_7 = inRef.MPO."0".ZLNR7;
	        SET outRef.DBT_NAM = inRef.MPO."0".ZLSHN1;
	        SET outRef.CDT_NAM = inRef.MPO."0".ZLSHN2;
	        SET outRef.RESPONSE_CODE = '';
	        SET outRef.RESPONSE_MESSAGE = '';
	        
	        IF inRef.RC = '0000' THEN
	        	SET outRef.RESPONSE_CODE = '0000';
	        	SET outRef.RESPONSE_MESSAGE = 'success';
	        ELSE
				CALL GetErrorDetails(T_ERROR_MAP, errorMap, inRef.RCMSG."0".MESSAGE_ID, SOURCE_SYSTEM, TARGET_SYSTEM);
				
				IF FIELDTYPE(errorMap.Field) IS NULL
				THEN
					CALL GetErrorDetails(T_ERROR_MAP, errorMap, '*', SOURCE_SYSTEM, TARGET_SYSTEM);
				END IF;
				
				SET outRef.RESPONSE_CODE = errorMap.Field.RC;
				SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
				SET httpStatus = errorMap.Field.HTTP_STATUS;
			END IF;
			
	        SET outRef.KSMID = COALESCE(inRef.RCMSG."0".MESSAGE_ID, '');
		END IF;
		
		SET outRef.RESPONSE_TIME = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		SET outData.JSON.(JSON.Object)Data = outRef;
		
		-- Logging output
		CALL PrepareLogMessage(OutputRoot, ApplicationLabel, MessageFlowLabel, NodeLabel, 'output', 'debug', OutputExceptionList, OutputLocalEnvironment, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.BLOB;
		
		SET OutputRoot.MQMD.Expiry = Q_EXPIRY;
		SET OutputRoot.MQRFH2.usr.vs.httpStatus = httpStatus;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		SET OutputRoot.JSON.(JSON.Object)Data = outData.JSON.Data;
		
		SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData[1].queueName = Environment.Variables.details.dbParam.TxQueueRes;
		
		RETURN TRUE;
	END;
