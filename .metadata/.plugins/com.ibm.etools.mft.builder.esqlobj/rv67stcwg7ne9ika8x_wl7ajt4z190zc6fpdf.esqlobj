/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- Keep the UUID
		SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		
		-- Logging input
		CALL PrepareLogMessage(OutputRoot, ApplicationLabel, MessageFlowLabel, NodeLabel, 'input', 'debug', InputExceptionList, InputLocalEnvironment, InputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.BLOB;

		SET OutputRoot.MQMD.CorrelId = CAST(Environment.Variables.details.correlId AS BLOB);
		SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData[1].queueName = SERVICE_PARAM.TxQueueRes;

		DECLARE outData, errorMap ROW;
		DECLARE httpStatus CHARACTER;
		CREATE LASTCHILD OF outData DOMAIN 'JSON';
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data;

		IF inRef.RC = '0068' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'MDW0068', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSEIF inRef.RC = '0091' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'CANNOT_PUT_TO_CORE', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSE
			SET outRef.CHANNEL_ID = COALESCE(inRef.CID, '');
			SET outRef.AUTH_TOKEN = COALESCE(Environment.Variables.inMessage.AUTH_TOKEN, '');
			SET outRef.REF_NO = COALESCE(Environment.Variables.inMessage.REF_NO, '');
			SET outRef.MODULE_CODE = COALESCE(inRef.MC, '');
			-----------------
			SET outRef.CUSTOMER = inRef.MPO."0".ZLCUS;
			SET outRef.CUS_TYPE = inRef.MPO."0".ZLCTP;
			SET outRef.CUS_NUM = inRef.MPO."0".ZLCPNC;
			SET outRef.CUS_NAME = inRef.MPO."0".ZLCUN;
			SET outRef.CUS_SRT_NAME = inRef.MPO."0".ZLDAS;
			SET outRef.BRANCH = inRef.MPO."0".ZLBRNM;
			SET outRef.TAX_REF1 = inRef.MPO."0".ZLCRB1;
			SET outRef.TAX_REF2 = inRef.MPO."0".ZLCRB2;
			SET outRef.PRT_CRTY = inRef.MPO."0";
			SET outRef.RSDN_CTRY = inRef.MPO."0";
			SET outRef.DECS_LIQD = inRef.MPO."0";
			SET outRef.ACC_CLSD = inRef.MPO."0";
			SET outRef.ACC_INKV = inRef.MPO."0";
			SET outRef.ACC_OFCR = inRef.MPO."0";
			SET outRef.RISK_CTRY = inRef.MPO."0";
			SET outRef.INIRSK_CTRY = inRef.MPO."0";
			SET outRef.LANG = inRef.MPO."0";
			SET outRef.MAIL_BRCH = inRef.MPO."0";
			SET outRef.EXMPT_TAX = inRef.MPO."0";
			SET outRef.LOAN_ORG_REF = inRef.MPO."0";
			SET outRef.TRD_FINC = inRef.MPO."0";
			SET outRef.RTL_BRCH = inRef.MPO."0";
			SET outRef.CONSD_STAT = inRef.MPO."0";
			SET outRef.FRC_CYCL_STAT = inRef.MPO."0";
			SET outRef.CPY_STAT = inRef.MPO."0";
			SET outRef.FRNT_OFFC = inRef.MPO."0";
			SET outRef.FRNT_OFFC_NAME = inRef.MPO."0";
			SET outRef.FRNT_OFFC_LOC = inRef.MPO."0";
			SET outRef.CUS_TYP_DESC = inRef.MPO."0";
			SET outRef.BRCH_NAME = inRef.MPO."0";
			SET outRef.PRT_CRTY_DESC = inRef.MPO."0";
			SET outRef.RSDN_CRTY_DESC = inRef.MPO."0";
			SET outRef.VLD_DECS_LIQD = inRef.MPO."0";
			SET outRef.VLD_ACC_CLSD = inRef.MPO."0";
			SET outRef.VLD_ACC_INKV = inRef.MPO."0";
			SET outRef.ACC_OFFC_NM = inRef.MPO."0";
			SET outRef.INT_RSK_CRTY = inRef.MPO."0";
			SET outRef.ANLYS_CODE = inRef.MPO."0";
			SET outRef.BRCH_NM = inRef.MPO."0";
			SET outRef.VLD_EXMPT_TAX = inRef.MPO."0";
			SET outRef.VLD_TRD_FINC = inRef.MPO."0";
			SET outRef.VLD_RTL_BRCH = inRef.MPO."0";
			SET outRef.VLD_FRNT_OFFCE = inRef.MPO."0";
			SET outRef.VLD_CONSD_STAT = inRef.MPO."0";
			SET outRef.VLD_FRC_CYCL_STAT = inRef.MPO."0";
			SET outRef.VLD_CPY_STAT = inRef.MPO."0";
			---------------


			SET outRef.RESPONSE_CODE = '';
			SET outRef.RESPONSE_MESSAGE = '';

			IF inRef.RC = '0000' THEN
				SET outRef.RESPONSE_CODE = '0000';
				SET outRef.RESPONSE_MESSAGE = 'success';
			ELSE
				CALL GetErrorDetails(T_ERROR_MAP, errorMap, inRef.RCMSG."0".MESSAGE_ID, SOURCE_SYSTEM, TARGET_SYSTEM);

				IF FIELDTYPE(errorMap.Field) IS NULL
					THEN
					CALL GetErrorDetails(T_ERROR_MAP, errorMap, '*', SOURCE_SYSTEM, TARGET_SYSTEM);
				END IF;

				SET outRef.RESPONSE_CODE = errorMap.Field.RC;
				SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
				SET httpStatus = errorMap.Field.HTTP_STATUS;
			END IF;

			SET outRef.KSMID = COALESCE(inRef.RCMSG."0".MESSAGE_ID, '');
		END IF;

		CREATE LASTCHILD OF outRef NAME 'RESPONSE_TIME' VALUE CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		SET outData.JSON.(JSON.Object)Data = outRef;
		
		-- Logging output
		CALL PrepareLogMessage(OutputRoot, ApplicationLabel, MessageFlowLabel, NodeLabel, 'output', 'debug', OutputExceptionList, OutputLocalEnvironment, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.BLOB;

		SET OutputRoot.MQRFH2.usr.vs.httpStatus = httpStatus;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		SET OutputRoot.JSON.(JSON.Object)Data = outData.JSON.Data;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
