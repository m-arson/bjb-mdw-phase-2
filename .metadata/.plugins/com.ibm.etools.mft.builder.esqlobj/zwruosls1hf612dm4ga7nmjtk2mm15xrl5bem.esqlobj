CREATE COMPUTE MODULE MF_TX_MDW_AIX_Mapping_Req_Core
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		-- Save input data and other propeties
		SET Environment.Variables.details = InputRoot.MQRFH2.usr.vs.details;
		SET Environment.Variables.details.correlId = InputRoot.MQMD.CorrelId;
		SET Environment.Variables.details.timeoutMDW = TIMEOUT_SERVICE;
		SET Environment.Variables.inMessage = InputRoot.JSON.Data;
		-- Set flow UUID
		SET InputLocalEnvironment.UUID = Environment.Variables.details.uuid;
		SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		-- Check and load table error map
		IF NOT EXISTS(T_ERROR_MAP.Field[]) THEN
			DECLARE dataSource CHARACTER DataSource;
			SET Environment.Variables.DB.T_ERROR_MAP.Field[] = PASSTHRU('SELECT * FROM ' || DB_SCHEMA || '.T_ERROR_MAP' TO Database.{dataSource});

			DECLARE I INTEGER 1;
			DECLARE J INTEGER CARDINALITY(Environment.Variables.DB.T_ERROR_MAP.Field[]);

			WHILE I <= J DO
				SET T_ERROR_MAP.Field[I] = Environment.Variables.DB.T_ERROR_MAP.Field[I];
				SET I = I + 1;
			END WHILE;

			DELETE FIELD Environment.Variables.DB;
		END IF;
		-- Load Service destination parameter
		IF SERVICE_PARAM IS NULL OR TRIM(SERVICE_PARAM) = ''
			THEN
			DECLARE dataSource CHARACTER DataSource;
			SET Environment.Variables.SERVICE_PARAM[] =
			PASSTHRU('SELECT * FROM ' || DB_SCHEMA || '.T_PARAMETER WHERE "ServiceName" = ' || SERVICE_NAME TO Database.{dataSource});
			SET SERVICE_PARAM = Environment.Variables.SERVICE_PARAM;
			SET SERVICE_PARAM.TxQueueRes = SUBSTRING(Environment.Variables.SERVICE_PARAM.TxQueue AFTER '|');
		END IF;

		SET Environment.Variables.details.dbParam = SERVICE_PARAM;
		DELETE FIELD Environment.Variables.SERVICE_PARAM;
		-- Logging input
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL LogInputDebug(InputExceptionList, InputLocalEnvironment, InputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;
		
		-- Declare I/O Reference
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data;
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data;
		DECLARE envReff REFERENCE TO Environment.Variables.details;
		DECLARE ts CHARACTER CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHMMss');
		DECLARE st CHARACTER ST;
		
		X: BEGIN ATOMIC READ WRITE
			SET ST = ST + 1;
		END X;
		
		DECLARE outData ROW;
		
		-- Mapping the request to backend
		CALL Split(envReff.dbParam.Param2, Environment, '|');

		SET outRef.SPPW = COALESCE(Environment.Split[7], '');
		SET outRef.PC = COALESCE(Environment.Split[1], '');
		SET outRef.SPPU = COALESCE(Environment.Split[6], '');
		
		SET outRef.MPI.B0EQF = COALESCE(inRef.EQ_FLE_COD, '');
		SET outRef.MPI.B0LPV = COALESCE(inRef.LNK_PRM_VAL, '');
		SET outRef.MPI.B0IGR = COALESCE(inRef.INF_GRP, '');
		SET outRef.MPI.B0AB = COALESCE(inRef.ACC_BRCH, '');
		SET outRef.MPI.B0AN = COALESCE(inRef.ACC_NUM, '');
		SET outRef.MPI.B0AS = COALESCE(inRef.ACC_SFX, '');
		SET outRef.MPI.B0PSQ = COALESCE(inRef.PSTG_NUM, '');
		SET outRef.MPI.B0POD = COALESCE(inRef.PSTG_DTE, '');
		SET outRef.MPI.B00027 = COALESCE(inRef.GUAR_SEC, '');
		SET outRef.MPI.B00032 = COALESCE(inRef.USG_CAT, '');
		SET outRef.MPI.B00033 = COALESCE(inRef.PRPS_FUND, '');
		SET outRef.MPI.B00035 = COALESCE(inRef.SRC_FUND, '');
		SET outRef.MPI.B00036 = COALESCE(inRef.TRANS_ACTV, '');
		SET outRef.MPI.B00041 = COALESCE(inRef.NAME_BENE, '');
		SET outRef.MPI.B00042 = COALESCE(inRef.ID_NUM, '');
		SET outRef.MPI.B00043 = COALESCE(inRef.ADDR, '');
		SET outRef.MPI.B00044 = COALESCE(inRef.BRTH_CTY_NAME, '');
		SET outRef.MPI.B00045 = COALESCE(inRef.BRTH_DTE, '');
		SET outRef.MPI.B00046 = COALESCE(inRef.CVIL_NATION, '');
		
		SET outRef.MPI.B00047 = COALESCE(inRef.JOB_TYPE, '');
		SET outRef.MPI.B00048 = COALESCE(inRef.JOB_ADDR, '');
		SET outRef.MPI.B00049 = COALESCE(inRef.NPWP, '');
		SET outRef.MPI.B00050 = COALESCE(inRef.INCM_AMT, '');
		SET outRef.MPI.B00051 = COALESCE(inRef.SRC_FUND_BENE, '');
		SET outRef.MPI.B00052 = COALESCE(inRef.PRPS_FUND_BENE, '');
		SET outRef.MPI.B00058 = COALESCE(inRef.BRTH_DTE, '');
		SET outRef.MPI.B0043A = COALESCE(inRef.AUTH_LTR_1, '');
		SET outRef.MPI.B0043B = COALESCE(inRef.AUTH_LTR_2, '');
		SET outRef.MPI.B0043C = COALESCE(inRef.AUTH_LTR_3, '');
		SET outRef.MPI.B0043D = COALESCE(inRef.AUTH_LTR_4, '');
		SET outRef.MPI.B05810 = COALESCE(inRef.ADDR_1, '');
		SET outRef.MPI.B05820 = COALESCE(inRef.ADDR_2, '');
		
		SET outRef.MPI.B05830 = COALESCE(inRef.ADDR_3, '');
		SET outRef.MPI.B00064 = COALESCE(inRef.CLTRL_AMT_BI, '');
		SET outRef.MPI.B00065 = COALESCE(inRef.CLTRL_AMT_MNL, '');
		SET outRef.MPI.B00066 = COALESCE(inRef.PPAP_CAL_BI, '');
		SET outRef.MPI.B00079 = COALESCE(inRef.STR_DATE_OD, '');
		SET outRef.MPI.B00082 = COALESCE(inRef.DLT_DATE, '');
		SET outRef.MPI.B00086 = COALESCE(inRef.DTE_BRTH_BENE, '');
		SET outRef.MPI.B00087 = COALESCE(inRef.PNLTY_VLUE, '');
		SET outRef.MPI.B00088 = COALESCE(inRef.STR_DATE, '');
		SET outRef.MPI.B00089 = COALESCE(inRef.MTRY_DATE, '');
		SET outRef.MPI.B00090 = COALESCE(inRef.INTL_RSTRC_DTE, '');
		SET outRef.MPI.B00091 = COALESCE(inRef.FNL_RSTRC_DTE, '');
		SET outRef.MPI.B00092 = COALESCE(inRef.RESTRUCT_TO, '');
		SET outRef.MPI.B0AC27 = COALESCE(inRef.PROGRM, '');
		SET outRef.MPI.B0AC31 = COALESCE(inRef.LIFE_INSRNCE_CODE, '');
		SET outRef.MPI.B0AC35 = COALESCE(inRef.NTRY_FEE, '');

		SET outRef.MT = COALESCE(Environment.Split[4], '');
		SET outRef.SID = COALESCE(InputLocalEnvironment.UUID, '');
		SET outRef.CID = COALESCE(inRef.CHANNEL_ID, '');
		SET outRef.ST = COALESCE(SUBSTRING(ts FROM 8 FOR 6) || SUBSTRING('00000' || st FROM LENGTH(st)+1), '');
		SET outRef.FC = COALESCE(Environment.Split[8], '');
		SET outRef.DT = COALESCE(ts, '');
		SET outRef.PCC = COALESCE(Environment.Split[2], '');
		SET outRef.MC = COALESCE(Environment.Split[3], '');
		SET outRef.CC = COALESCE(Environment.Split[5], '');

		CREATE LASTCHILD OF outData DOMAIN 'JSON';
		CREATE FIELD outData.JSON.Data IDENTITY (JSON.Object)Data;
		SET outData.JSON.Data = outRef;

		DELETE FIELD Environment.Split;
		-- Logging output
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL LogOutputDebug(OutputExceptionList, OutputLocalEnvironment, OutputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;
		-- Reassign the value
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		SET OutputRoot.JSON.Data = outData.JSON.Data;



		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;