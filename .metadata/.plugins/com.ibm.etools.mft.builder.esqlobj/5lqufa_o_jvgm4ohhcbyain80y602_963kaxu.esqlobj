/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- Keep the UUID
		SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		
		-- Logging input
		CALL PrepareLogMessage(OutputRoot, ApplicationLabel, MessageFlowLabel, NodeLabel, 'input', 'debug', InputExceptionList, InputLocalEnvironment, InputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.BLOB;

		SET OutputRoot.MQMD.CorrelId = CAST(Environment.Variables.details.correlId AS BLOB);
		SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData[1].queueName = SERVICE_PARAM.TxQueueRes;

		DECLARE outData, errorMap ROW;
		DECLARE httpStatus CHARACTER;
		CREATE LASTCHILD OF outData DOMAIN 'JSON';
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data;

		IF inRef.RC = '0068' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'MDW0068', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSEIF inRef.RC = '0091' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'CANNOT_PUT_TO_CORE', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSE
			SET outRef.CHANNEL_ID = COALESCE(inRef.CID, '');
	        SET outRef.AUTH_TOKEN = COALESCE(Environment.Variables.inMessage.AUTH_TOKEN, '');
	        SET outRef.REF_NO = COALESCE(Environment.Variables.inMessage.REF_NO, '');
	        SET outRef.MODULE_CODE = COALESCE(inRef.MC, '');
	        SET outRef.MODULE_CODE = COALESCE(inRef.REQUEST_TIME, '');
			
			SET outRef.ACC_BRCH = COALESCE(, '');
			SET outRef.ACC_NUM = COALESCE(, '');
			SET outRef.ACC_SFX = COALESCE(, '');
			SET outRef.ACC_TYP = COALESCE(, '');
			SET outRef.SHRT_NM = COALESCE(, '');
			SET outRef.CCY = COALESCE(, '');
			SET outRef.ACC_JOIN = COALESCE(, '');
			SET outRef.ACC_TYP_DESC = COALESCE(, '');
			SET outRef.CUS_LOC = COALESCE(, '');
			SET outRef.CUS_FULL_NM = COALESCE(, '');
			SET outRef.EDIT_ACC_NUM = COALESCE(, '');
			SET outRef.CCY_DESC = COALESCE(, '');
			SET outRef.EDIT_DT_ACC_OPN = COALESCE(, '');
			SET outRef.VLD_ACC_JOIN = COALESCE(, '');
			
			SET outRef.RESPONSE_CODE = '';
			SET outRef.RESPONSE_MESSAGE = '';

			IF inRef.RC = '0000' THEN
				SET outRef.RESPONSE_CODE = '0000';
				SET outRef.RESPONSE_MESSAGE = 'success';
			ELSE
				CALL GetErrorDetails(T_ERROR_MAP, errorMap, inRef.RCMSG."0".MESSAGE_ID, SOURCE_SYSTEM, TARGET_SYSTEM);

				IF FIELDTYPE(errorMap.Field) IS NULL
					THEN
					CALL GetErrorDetails(T_ERROR_MAP, errorMap, '*', SOURCE_SYSTEM, TARGET_SYSTEM);
				END IF;

				SET outRef.RESPONSE_CODE = errorMap.Field.RC;
				SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
				SET httpStatus = errorMap.Field.HTTP_STATUS;
			END IF;

			SET outRef.KSMID = COALESCE(inRef.RCMSG."0".MESSAGE_ID, '');
		END IF;

		CREATE LASTCHILD OF outRef NAME 'RESPONSE_TIME' VALUE CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		SET outData.JSON.(JSON.Object)Data = outRef;
		
		-- Logging output
		CALL PrepareLogMessage(OutputRoot, ApplicationLabel, MessageFlowLabel, NodeLabel, 'output', 'debug', OutputExceptionList, OutputLocalEnvironment, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.BLOB;

		SET OutputRoot.MQRFH2.usr.vs.httpStatus = httpStatus;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		SET OutputRoot.JSON.(JSON.Object)Data = outData.JSON.Data;

		RETURN TRUE;
	END;
