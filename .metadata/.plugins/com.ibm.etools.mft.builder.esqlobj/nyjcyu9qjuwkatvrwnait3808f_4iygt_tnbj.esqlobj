CREATE COMPUTE MODULE MF_TX_JSON_INQ_PKB_MapMessage_and_SendTo_Adapter
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Save input data and other propeties
		SET Environment.Variables.details = InputRoot.MQRFH2.usr.vs.details;
		SET Environment.Variables.details.correlId = InputRoot.MQMD.CorrelId;
		SET Environment.Variables.details.timeoutMDW = TIMEOUT_SERVICE;
		SET Environment.Variables.details.qExpiry = Q_EXPIRY;
		SET Environment.Variables.inMessage = InputRoot.JSON.Data;
		
		-- Set flow UUID
		 SET InputLocalEnvironment.UUID = Environment.Variables.details.uuid;
		 SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		
		-- Check and load table error map
		IF NOT EXISTS(T_ERROR_MAP.Field[]) THEN
			SET Environment.Variables.DB.T_ERROR_MAP.Field[] =
				(SELECT 
					T.MESSAGE_ID,
					T.RC,
					T.RC_GROUP,
					T.HTTP_STATUS,
					T.MESSAGE,
					T."""SourceSystem""" AS SourceSystem,
					T."""TargetSystem""" AS TargetSystem
				FROM Database.{'T_ERROR_MAP'} AS T);
			
			DECLARE I INTEGER 1;
			DECLARE J INTEGER CARDINALITY(Environment.Variables.DB.T_ERROR_MAP.Field[]);
			
			WHILE I <= J DO
				SET T_ERROR_MAP.Field[I] = Environment.Variables.DB.T_ERROR_MAP.Field[I];
				SET I = I + 1;
			END WHILE;
		END IF;
		
		
		-------------------------- LOAD BILLER PARAM PKB ----------------------------
		IF PKB_INQ_JSON_PARAM IS NULL OR TRIM(PKB_INQ_JSON_PARAM) = '' THEN
			SET Environment.Variables.PKB_INQ_JSON_PARAM[] =
				THE(
					SELECT T FROM T.{'T_PEMDA_PARAM'} AS T
					WHERE
						T.PEMDAID = PEM_ID AND
						T.SVRTYPE = SVR_TYPE);
				
			SET PKB_INQ_JSON_PARAM = Environment.Variables.PKB_INQ_JSON_PARAM;
			SET PKB_INQ_JSON_PARAM.TxQueueRes = SUBSTRING(InputRoot.MQRFH2.usr.vs.details.TxQueue AFTER '|');
		END IF;

		SET Environment.Variables.PKBINQ = PKB_INQ_JSON_PARAM;
		DELETE FIELD Environment.Variables.PKB_INQ_JSON_PARAM;
		-------------------------- LOAD BILLER PARAM PKB ----------------------------
		-----------------------------------SET NOW DATE-------------------------------------
		DECLARE dtts CHARACTER CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmssSSS');
		DECLARE gmtts CHARACTER CAST(CURRENT_GMTTIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		-----------------------------------SET NOW DATE-------------------------------------
		------------------------- SET ADAPTER Q -------------------------------
		DECLARE destReqQ CHARACTER InputRoot.MQRFH2.usr.vs.details.DestRequestQ;
		DECLARE destResQ CHARACTER InputRoot.MQRFH2.usr.vs.details.DestResponseQ;
		------------------------- SET ADAPTER Q -------------------------------
		-------------------------- MAP JSON TO ISO XML ------------------------------		


		SET OutputRoot.MQMD.CorrelId = InputRoot.MQRFH2.usr.vs.details.uuid;
		SET OutputRoot.MQRFH2.usr.vs.details = InputRoot.MQRFH2.usr.vs.details;

		SET OutputRoot.XMLNSC.isomsg.MTI = '0200';
		SET OutputRoot.XMLNSC.isomsg.Field002 = '622011444444444444';
		SET OutputRoot.XMLNSC.isomsg.Field003 = Environment.Variables.PKBINQ.PROCODE;
		SET OutputRoot.XMLNSC.isomsg.Field004 = '000000000000';
		SET OutputRoot.XMLNSC.isomsg.Field007 = LEFT(gmtts,10);
		SET OutputRoot.XMLNSC.isomsg.Field011 = RIGHT(dtts,6);
		SET OutputRoot.XMLNSC.isomsg.Field012 = LEFT(dtts,6);
		SET OutputRoot.XMLNSC.isomsg.Field013 = SUBSTRING(dtts FROM 5 FOR 4);
		SET OutputRoot.XMLNSC.isomsg.Field015 = SUBSTRING(dtts FROM 5 FOR 4);
		SET OutputRoot.XMLNSC.isomsg.Field018 = InputRoot.JSON.Data.CHANNEL;
		SET OutputRoot.XMLNSC.isomsg.Field022 = '021';
		SET OutputRoot.XMLNSC.isomsg.Field032 = '03110';
		SET OutputRoot.XMLNSC.isomsg.Field033 = OutputRoot.XMLNSC.isomsg.Field032;
		SET OutputRoot.XMLNSC.isomsg.Field035 = CAST(OutputRoot.XMLNSC.isomsg.Field002 AS CHARACTER) || '=9912?';
		SET OutputRoot.XMLNSC.isomsg.Field037 = RIGHT('000000000000' || CAST(InputRoot.JSON.Data.REF_TRX AS CHARACTER), 12);
		SET InputLocalEnvironment.TERMID = TRIM(InputRoot.JSON.Data.TERMID);
		SET InputLocalEnvironment.LOCATION = TRIM(InputRoot.JSON.Data.LOCATION);
		SET InputLocalEnvironment.TERMNAME = TRIM(InputRoot.JSON.Data.TERMNAME);
		SET OutputRoot.XMLNSC.isomsg.Field041 = LEFT(InputLocalEnvironment.TERMID || SPACE(8), 8);
		SET OutputRoot.XMLNSC.isomsg.Field043 = LEFT(InputLocalEnvironment.LOCATION || SPACE(25), 25) || LEFT(InputLocalEnvironment.TERMNAME || SPACE(15), 15);
		SET OutputRoot.XMLNSC.isomsg.Field049 = '360';
		SET OutputRoot.XMLNSC.isomsg.Field061 = LEFT(CAST(InputRoot.JSON.Data.BILL_NO AS CHARACTER) || SPACE(32), 32);
		-------------------------- MAP JSON TO ISO XML ------------------------------

		SET OutputLocalEnvironment.MQ.GET.QueueName = destResQ;
		SET OutputLocalEnvironment.MQ.GET.MQGMO.WaitInterval = TIMEOUT_SERVICE;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = destReqQ;		


		RETURN TRUE;
	END;
END MODULE;