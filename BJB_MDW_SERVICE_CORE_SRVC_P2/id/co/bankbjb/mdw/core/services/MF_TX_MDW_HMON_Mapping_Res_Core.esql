BROKER SCHEMA id.co.bankbjb.mdw.core.services
PATH id.co.bankbjb.mdw.lib;

CREATE COMPUTE MODULE MF_TX_MDW_HMON_Mapping_Res_Core
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Keep the UUID
		SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		
		-- Logging input
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL LogInputDebug(InputExceptionList, InputLocalEnvironment, InputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;
		
		SET OutputRoot.MQMD.CorrelId = CAST(Environment.Variables.details.correlId AS BLOB);
		SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData[1].queueName = SERVICE_PARAM.TxQueueRes;
				
		DECLARE errorMap, outData ROW;
		DECLARE httpStatus CHARACTER;
		CREATE LASTCHILD OF outData DOMAIN 'JSON';
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data;
		
		IF inRef.RC = '0068' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'MDW0068', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSEIF inRef.RC = '0091' THEN
			CALL GetErrorDetails(T_ERROR_MAP, errorMap, 'CANNOT_PUT_TO_CORE', SOURCE_SYSTEM, TARGET_SYSTEM);
			SET outRef = Environment.Variables.inMessage;
			SET outRef.RESPONSE_CODE = errorMap.Field.RC;
			SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
			SET httpStatus = errorMap.Field.HTTP_STATUS;
		ELSE
	        SET outRef.AUTH_TOKEN = Environment.Variables.inMessage.AUTH_TOKEN;
			SET outRef.REF_NO = Environment.Variables.inMessage.REF_NO;
			SET outRef.MODULE_CODE = inRef.MC;
			SET outRef.CHANNEL_ID = inRef.CID;
			SET outRef.REF_TRX = Environment.Variables.inMessage.REF_TRX;
			SET outRef.TRACE = inRef.MPI.TRACE;
			SET outRef.AMOUNT = inRef.MPI.AMOUNT;
			SET outRef.DECPOS = inRef.MPI.DECPOS;
			SET outRef.FRMACT = inRef.MPI.FRMACT;
			SET outRef.TOACT = Environment.Variables.inMessage.TOACT;
			SET outRef.TERMID = inRef.MPI.TERMID;
			SET outRef.CRTCOD = inRef.MPI.CRTCOD;
			SET outRef.DBTCOD = inRef.MPI.DBTCOD;
			SET outRef.CRDTYP = inRef.MPI.CRDTYP;
			SET outRef.TRTYPE = inRef.MPI.TRTYPE;
			SET outRef.CHNTYP = inRef.MPI.CHNTYP;
			SET outRef.ISSUER = inRef.MPI.ISSUER;
			SET outRef.ACQUER = inRef.MPI.ACQUER;
			SET outRef.CARDNO = inRef.MPI.CARDNO;
			SET outRef.REVERS = inRef.MPI.REVERS;
			SET outRef.FLAG_TRX = Environment.Variables.inMessage.FLAG_TRX;
			SET outRef.EDITFL = inRef.MPI.EDITFL;
			SET outRef.NUMFLD1 = inRef.MPI.NUMFLD1;
			SET outRef.NUMFLD2 = inRef.MPI.NUMFLD2;
			SET outRef.NUMFLD3 = inRef.MPI.NUMFLD3;
			SET outRef.NUMFLD4 = inRef.MPI.NUMFLD4;
			SET outRef.NUMFLD5 = inRef.MPI.NUMFLD5;
			SET outRef.NUMFLD6 = inRef.MPI.NUMFLD6;
			SET outRef.STRFLD1 = LEFT(inRef.MPI.STRFLD1 || SPACE(25), 35);
			SET outRef.STRFLD2 = LEFT(inRef.MPI.STRFLD2 || SPACE(25), 30);
			SET outRef.STRFLD3 = LEFT(inRef.MPI.STRFLD3 || SPACE(25), 30);
			SET outRef.STRFLD6 = inRef.MPI.STRFLD6;
			SET outRef.STRFLG1 = inRef.MPI.STRFLG1;
			SET outRef.ACQLOC = inRef.MPI.ACQLOC;
	        SET outRef.RESPONSE_CODE = '';
	        SET outRef.RESPONSE_MESSAGE = '';
	        
	        IF inRef.RC = '0000' THEN
	        	SET outRef.RESPONSE_CODE = '0000';
	        	SET outRef.RESPONSE_MESSAGE = 'success';
	        ELSE
				CALL GetErrorDetails(T_ERROR_MAP, errorMap, inRef.RCMSG."0".MESSAGE_ID, SOURCE_SYSTEM, TARGET_SYSTEM);
				
				IF FIELDTYPE(errorMap.Field) IS NULL
				THEN
					CALL GetErrorDetails(T_ERROR_MAP, errorMap, '*', SOURCE_SYSTEM, TARGET_SYSTEM);
				END IF;
				
				SET outRef.RESPONSE_CODE = errorMap.Field.RC;
				SET outRef.RESPONSE_MESSAGE = errorMap.Field.MESSAGE;
				SET httpStatus = errorMap.Field.HTTP_STATUS;
			END IF;
			
	        SET outRef.KSMID = COALESCE(inRef.RCMSG."0".MESSAGE_ID, '');
		END IF;
		
		SET outRef.RESPONSE_TIME = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		SET outData.JSON.(JSON.Object)Data = outRef;
		
		
		-- Logging output
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL LogOutputDebug(OutputExceptionList, OutputLocalEnvironment, OutputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;
		
		SET OutputRoot.MQRFH2.usr.vs.httpStatus = httpStatus;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		SET OutputRoot.JSON.(JSON.Object)Data = outData.JSON.Data;
		
		RETURN TRUE;
	END;
END MODULE;
