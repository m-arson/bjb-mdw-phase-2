BROKER SCHEMA id.co.bankbjb.mdw.core.services
PATH id.co.bankbjb.mdw.lib;

CREATE COMPUTE MODULE MF_TX_MDW_INQ_LOAN_MAP_REQUEST_AND_SEND_URL
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Save input data and other propeties
		SET Environment.Variables.details = InputRoot.MQRFH2.usr.vs.details;
		SET Environment.Variables.details.correlId = InputRoot.MQMD.CorrelId;
		SET Environment.Variables.details.timeoutMDW = TIMEOUT_SERVICE;
		SET Environment.Variables.inMessage = InputRoot.JSON.Data;
		SET Environment.errReff = 'AB';
		
		-- Set flow UUID
		 SET InputLocalEnvironment.UUID = Environment.Variables.details.uuid;
		 SET OutputLocalEnvironment.UUID = InputLocalEnvironment.UUID;
		
		-- Check and load table error map
		IF NOT EXISTS(T_ERROR_MAP.Field[]) THEN
			DECLARE dataSource CHARACTER DataSource;
			SET Environment.Variables.DB.T_ERROR_MAP.Field[] = PASSTHRU('SELECT * FROM ' || DB_SCHEMA || '.T_ERROR_MAP' TO Database.{dataSource});
			
			DECLARE I INTEGER 1;
			DECLARE J INTEGER CARDINALITY(Environment.Variables.DB.T_ERROR_MAP.Field[]);
			
			WHILE I <= J DO
				SET T_ERROR_MAP.Field[I] = Environment.Variables.DB.T_ERROR_MAP.Field[I];
				SET I = I + 1;
			END WHILE;
			
			DELETE FIELD Environment.Variables.DB;
		END IF;
		
		-- Load Service destination parameter
		IF SERVICE_PARAM IS NULL OR TRIM(SERVICE_PARAM) = ''
		THEN
			DECLARE dataSource CHARACTER DataSource;
			SET Environment.Variables.SERVICE_PARAM[] =
				PASSTHRU('SELECT * FROM ' || DB_SCHEMA || '.T_PARAMETER WHERE "ServiceName" = ' || SERVICE_NAME TO Database.{dataSource});
			SET SERVICE_PARAM = Environment.Variables.SERVICE_PARAM;
			SET SERVICE_PARAM.TxQueueRes = SUBSTRING(Environment.Variables.SERVICE_PARAM.TxQueue AFTER '|');
		END IF;
		
		SET Environment.Variables.details.dbParam = SERVICE_PARAM;
		DELETE FIELD Environment.Variables.SERVICE_PARAM;
		
		-- Logging Input
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL LogInputInfo(InputExceptionList, InputLocalEnvironment, InputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;
		
		SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
		
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = Environment.Variables.details.dbParam.Param2;
		SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method = 'POST';
		
		-- Logging output
		SET OutputRoot.MQRFH2.usr.vs.log4jConfig = ApplicationLabel;
		CALL LogOutputDebug(OutputExceptionList, OutputLocalEnvironment, OutputRoot, OutputRoot);
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.BLOB;
		
		-- Reassign the value
		SET OutputRoot.HTTPRequestHeader."X-Uuid" = OutputLocalEnvironment.UUID;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
		SET OutputRoot.JSON.Data.REQUEST_TIME = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		
		RETURN TRUE;
	END;
END MODULE;
